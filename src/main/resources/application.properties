server.port=8087

###OAUTH config###

#mywebclient is an idea you can name yourself and is different for each client
spring.security.oauth2.client.registration.mywebclient.client-id=photo-app-webclient
#lenovo
#spring.security.oauth2.client.registration.mywebclient.client-secret=1bcd2260-32f7-4f5d-a78d-1a103fde1a79
#cgi
spring.security.oauth2.client.registration.mywebclient.client-secret=e5e9e3e1-136e-4781-8b20-bd3b188f94e5

#the scopes needed for this client application
spring.security.oauth2.client.registration.mywebclient.scope=openid, profile, roles
spring.security.oauth2.client.registration.mywebclient.authorization-grant-type=authorization_code
#the part "login/oauth2/code" is almost always the same for any authorization server(Google, Facebook etc)
spring.security.oauth2.client.registration.mywebclient.redirect-uri=http://localhost:8087/login/oauth2/code/mywebclient

#To communicate with the authorization providor
spring.security.oauth2.client.provider.mywebclient.authorization-uri=http://localhost:8080/auth/realms/appsdeveloperblog/protocol/openid-connect/auth
spring.security.oauth2.client.provider.mywebclient.token-uri=http://localhost:8080/auth/realms/appsdeveloperblog/protocol/openid-connect/token
spring.security.oauth2.client.provider.mywebclient.jwk-set-uri=http://localhost:8080/auth/realms/appsdeveloperblog/protocol/openid-connect/certs
spring.security.oauth2.client.provider.mywebclient.user-info-uri=http://localhost:8080/auth/realms/appsdeveloperblog/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.mywebclient.user-name-attribute=preferred_username